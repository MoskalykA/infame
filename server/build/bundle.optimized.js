(()=>{"use strict";var e={274:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default={identifier:{name:"discord"},character:{enabled:!0,selectionBeforeConnection:!0}}},714:()=>{RegisterCommand("infame_spawn_vehicle",((e,t,r)=>{console.log(JSON.stringify(getPlayerIdentifiers(e)))}),!1)},190:()=>{},240:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=n(r(274));AddEventHandler("playerConnecting",((e,t,r)=>{r.defer(),getPlayerIdentifiers(source).includes(o.default.identifier.name)?console.log("perfect"):r.presentCard({type:"AdaptiveCard",body:[{type:"TextBlock",size:"Medium",weight:"Bolder",text:"Error during connection"},{type:"TextBlock",text:`You do not have an open ${o.default.identifier.name} so you are not able to join the server.`,wrap:!0}],$schema:"http://adaptivecards.io/schemas/adaptive-card.json",version:"1.5"})}))},901:()=>{},110:()=>{},236:()=>{},961:()=>{}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,r),i.exports}r(274),r(714),r(190),r(110),r(236),r(240),r(901),r(961)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLm9wdGltaXplZC5qcyIsIm1hcHBpbmdzIjoic0NBQ0FBLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RERCxFQUFBLFFBQWtCLENBQ2RFLFdBQVksQ0FDUkMsS0FBTSxXQUVWQyxVQUFXLENBQ1BDLFNBQVMsRUFDVEMsMkJBQTJCLEcsV0NKbkNDLGdCQUFnQix3QkFBd0IsQ0FBQ0MsRUFBUUMsRUFBTUMsS0FhbkRDLFFBQVFDLElBQUlDLEtBQUtDLFVBQVVDLHFCQUFxQlAsSUFBUyxJQUMxRCxFLGlDQ2pCSCxJQUFJUSxFQUFtQkMsTUFBUUEsS0FBS0QsaUJBQW9CLFNBQVVFLEdBQzlELE9BQVFBLEdBQU9BLEVBQUlDLFdBQWNELEVBQU0sQ0FBRSxRQUFXQSxFQUN4RCxFQUNBcEIsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdEQsTUFBTW1CLEVBQVFKLEVBQWdCLEVBQVEsTUFDdENLLGdCQUFnQixvQkFBb0IsQ0FBQ0MsRUFBWUMsRUFBZUMsS0FDNURBLEVBQVVDLFFBQ1VWLHFCQUFxQlAsUUFDekJrQixTQUFTTixFQUFNTyxRQUFRekIsV0FBV0MsTUFDOUNRLFFBQVFDLElBQUksV0FHWlksRUFBVUksWUFBWSxDQUNsQkMsS0FBTSxlQUNOQyxLQUFNLENBQ0YsQ0FDSUQsS0FBTSxZQUNORSxLQUFNLFNBQ05DLE9BQVEsU0FDUkMsS0FBTSwyQkFFVixDQUNJSixLQUFNLFlBQ05JLEtBQU0sMkJBQTJCYixFQUFNTyxRQUFRekIsV0FBV0MsK0NBQzFEK0IsTUFBTSxJQUdkQyxRQUFTLHFEQUNUQyxRQUFTLE9BRWpCLEcsK0NDOUJBQyxFQUEyQixDQUFDLEVBR2hDLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJFLElBQWpCRCxFQUNILE9BQU9BLEVBQWF4QyxRQUdyQixJQUFJMEMsRUFBU0wsRUFBeUJFLEdBQVksQ0FHakR2QyxRQUFTLENBQUMsR0FPWCxPQUhBMkMsRUFBb0JKLEdBQVVLLEtBQUtGLEVBQU8xQyxRQUFTMEMsRUFBUUEsRUFBTzFDLFFBQVNzQyxHQUdwRUksRUFBTzFDLE9BQ2YsQ0NuQkFzQyxFQUFvQixLQUNwQkEsRUFBb0IsS0FDcEJBLEVBQW9CLEtBQ3BCQSxFQUFvQixLQUNwQkEsRUFBb0IsS0FDcEJBLEVBQW9CLEtBQ3BCQSxFQUFvQixLQUNNQSxFQUFvQixJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2Vudi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2luZmFtZS9ldmVudHMvcGxheWVyQ29ubmVjdGluZy50cyIsIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5leHBvcnRzLmRlZmF1bHQgPSB7XHJcbiAgICBpZGVudGlmaWVyOiB7XHJcbiAgICAgICAgbmFtZTogXCJkaXNjb3JkXCIsXHJcbiAgICB9LFxyXG4gICAgY2hhcmFjdGVyOiB7XHJcbiAgICAgICAgZW5hYmxlZDogdHJ1ZSxcclxuICAgICAgICBzZWxlY3Rpb25CZWZvcmVDb25uZWN0aW9uOiB0cnVlLFxyXG4gICAgfSxcclxufTtcclxuIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbi8qXHJcbiAgZGlyIC9zIC9iIC9vOmduXHJcbiovXHJcblJlZ2lzdGVyQ29tbWFuZChcImluZmFtZV9zcGF3bl92ZWhpY2xlXCIsIChzb3VyY2UsIGFyZ3MsIHJhdykgPT4ge1xyXG4gICAgLypjb25zdCBwZWQgPSBuZXcgSW5mYW1lUGVkKHNvdXJjZSk7XHJcbiAgICBjb25zdCB2ZWhpY2xlID0gQ3JlYXRlVmVoaWNsZShcclxuICAgICAgXCJzdWx0YW5cIixcclxuICAgICAgcGVkLmdldFgoKSxcclxuICAgICAgcGVkLmdldFkoKSxcclxuICAgICAgcGVkLmdldFooKSxcclxuICAgICAgcGVkLmdldFlhdygpLFxyXG4gICAgICB0cnVlLFxyXG4gICAgICBmYWxzZVxyXG4gICAgKTtcclxuXHJcbiAgICBwZWQuc2V0VmVoaWNsZSh2ZWhpY2xlKTsqL1xyXG4gICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZ2V0UGxheWVySWRlbnRpZmllcnMoc291cmNlKSkpO1xyXG59LCBmYWxzZSk7XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcclxuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xyXG59O1xyXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XHJcbmNvbnN0IGVudl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJAL2VudlwiKSk7XHJcbkFkZEV2ZW50SGFuZGxlcihcInBsYXllckNvbm5lY3RpbmdcIiwgKHBsYXllck5hbWUsIHNldEtpY2tSZWFzb24sIGRlZmVycmFscykgPT4ge1xyXG4gICAgZGVmZXJyYWxzLmRlZmVyKCk7XHJcbiAgICBjb25zdCBpZGVudGlmaWVycyA9IGdldFBsYXllcklkZW50aWZpZXJzKHNvdXJjZSk7XHJcbiAgICBpZiAoaWRlbnRpZmllcnMuaW5jbHVkZXMoZW52XzEuZGVmYXVsdC5pZGVudGlmaWVyLm5hbWUpKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJwZXJmZWN0XCIpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgZGVmZXJyYWxzLnByZXNlbnRDYXJkKHtcclxuICAgICAgICAgICAgdHlwZTogXCJBZGFwdGl2ZUNhcmRcIixcclxuICAgICAgICAgICAgYm9keTogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiVGV4dEJsb2NrXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCJNZWRpdW1cIixcclxuICAgICAgICAgICAgICAgICAgICB3ZWlnaHQ6IFwiQm9sZGVyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgdGV4dDogXCJFcnJvciBkdXJpbmcgY29ubmVjdGlvblwiLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIlRleHRCbG9ja1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IGBZb3UgZG8gbm90IGhhdmUgYW4gb3BlbiAke2Vudl8xLmRlZmF1bHQuaWRlbnRpZmllci5uYW1lfSBzbyB5b3UgYXJlIG5vdCBhYmxlIHRvIGpvaW4gdGhlIHNlcnZlci5gLFxyXG4gICAgICAgICAgICAgICAgICAgIHdyYXA6IHRydWUsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAkc2NoZW1hOiBcImh0dHA6Ly9hZGFwdGl2ZWNhcmRzLmlvL3NjaGVtYXMvYWRhcHRpdmUtY2FyZC5qc29uXCIsXHJcbiAgICAgICAgICAgIHZlcnNpb246IFwiMS41XCIsXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0pO1xyXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxuX193ZWJwYWNrX3JlcXVpcmVfXygyNzQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg3MTQpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxOTApO1xuX193ZWJwYWNrX3JlcXVpcmVfXygxMTApO1xuX193ZWJwYWNrX3JlcXVpcmVfXygyMzYpO1xuX193ZWJwYWNrX3JlcXVpcmVfXygyNDApO1xuX193ZWJwYWNrX3JlcXVpcmVfXyg5MDEpO1xudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDk2MSk7XG4iXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpZGVudGlmaWVyIiwibmFtZSIsImNoYXJhY3RlciIsImVuYWJsZWQiLCJzZWxlY3Rpb25CZWZvcmVDb25uZWN0aW9uIiwiUmVnaXN0ZXJDb21tYW5kIiwic291cmNlIiwiYXJncyIsInJhdyIsImNvbnNvbGUiLCJsb2ciLCJKU09OIiwic3RyaW5naWZ5IiwiZ2V0UGxheWVySWRlbnRpZmllcnMiLCJfX2ltcG9ydERlZmF1bHQiLCJ0aGlzIiwibW9kIiwiX19lc01vZHVsZSIsImVudl8xIiwiQWRkRXZlbnRIYW5kbGVyIiwicGxheWVyTmFtZSIsInNldEtpY2tSZWFzb24iLCJkZWZlcnJhbHMiLCJkZWZlciIsImluY2x1ZGVzIiwiZGVmYXVsdCIsInByZXNlbnRDYXJkIiwidHlwZSIsImJvZHkiLCJzaXplIiwid2VpZ2h0IiwidGV4dCIsIndyYXAiLCIkc2NoZW1hIiwidmVyc2lvbiIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIl0sInNvdXJjZVJvb3QiOiIifQ==